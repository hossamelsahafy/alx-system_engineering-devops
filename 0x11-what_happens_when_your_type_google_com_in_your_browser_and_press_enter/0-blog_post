When you type www.google.com into your browser and press Enter, a complex process is initiated to retrieve the webpage and display it on your screen. This process involves several steps:
The process begins with a DNS (Domain Name System) request. The browser needs to convert the domain name (www.google.com) into an IP address. This conversion is done through a series of queries to DNS servers, which act like an internet phonebook.
Once the IP address is obtained, the request is checked by the firewall. The firewall acts as a security guard, ensuring that the request complies with the network’s security rules. If the request is deemed safe, it is allowed to proceed to the destination.
The ‘https’ in the URL indicates that the website uses SSL (Secure Sockets Layer) or its successor TLS (Transport Layer Security). These protocols help establish a secure connection between your browser and the server. The browser and the server perform an SSL handshake, where they exchange encryption keys to establish this secure connection.
Once a secure connection is established, the request might hit a load balancer. The load balancer’s job is to distribute network or application traffic across a number of servers. This is done to ensure that no single server becomes overwhelmed with too many requests, thereby maintaining the performance and speed of the server response.
The request then reaches the web server. The web server’s role is to handle the incoming request and respond accordingly. For www.google.com, the web server would fetch the homepage of Google.
If the web server needs dynamic content to fulfill the request, it communicates with an application server. The application server is like the kitchen of a restaurant, preparing the requested dish (in this case, the webpage). It runs scripts, interacts with databases, and constructs an HTML page.
The application server may need to query a database for additional information. The database is like the restaurant’s storeroom, holding all the ingredients (data) needed to prepare the dish (webpage). For example, if you were logging into an account, the application server would query a database for your login credentials.
Once the webpage is prepared, it is sent back through the chain - from the application server to the web server, then through the load balancer, back to your browser over the secure connection. The browser then renders the HTML, CSS, and JavaScript into the webpage that you see.
